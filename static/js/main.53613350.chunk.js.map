{"version":3,"sources":["cards_data/cards.js","Game.js","pile.js","Card.js","App.js","index.js"],"names":["Cards","suit","value","color","unicode","Game","constructor","this","deck","tableaus","foundations","showCardPile","addShuffledPile","pile","drawCard","setShowCardPile","reloadDeck","isEmpty","addCard","changeCard","addTableau","tableau","push","getTopMostCard","getLastCard","addFoundation","foundation","addCardToReservedPile","id","des","split","includes","addCardToReservedPileFromWaste","addCardToFoundationFromTableau","addCardToStackPile","console","log","addCardToStackPileFromWaste","addCardToStackPileFromFoundation","addCardToTableauFromTableau","srcPile","isAddable","isAddableToStackPile","getLastCardValue","isAlternateColor","getLastCardColor","isAddableToReservedPile","isSameSuit","getLastCardSuit","noOfCards","getCardValue","getCardColor","addCards","drawCards","isDraggable","Pile","cards","card","forEach","length","getCard","pop","result","Array","fill","map","x","reverse","blockLastCard","blockCard","revealLastCard","revealCard","getAllCards","Card","isBlockedCard","actualUnicode","actualColor","getUnicode","isBlocked","defaultCard","emptyCard","App","React","Component","props","super","state","game","startGame","initializePile","setFoundations","setTableaus","lodash","shuffle","index","i","updateDeck","setState","allowDrop","event","preventDefault","drag","dataTransfer","setData","target","dropInFoundation","destination","src","getData","showAllTableauCards","totalCards","className","style","getColor","draggable","onDragStart","getAllTableauCards","onDrop","dropInTableau","bind","onDragOver","getAllFoundationCards","showTopCard","allCards","onClick","render","ReactDOM","document","getElementById"],"mappings":"yLAAA,MAAMA,EAAQ,CACZ,CACEC,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,EACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,OACNC,MAAO,GACPC,MAAO,QACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,UACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,EACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,MACPC,QAAS,gBAEX,CACEH,KAAM,QACNC,MAAO,GACPC,MAAO,MACPC,QAAS,iB,oBCtLEC,MAjIf,MACEC,cACEC,KAAKC,KAAO,KACZD,KAAKE,SAAW,GAChBF,KAAKG,YAAc,GACnBH,KAAKI,aAAe,KAGtBC,gBAAgBC,GACdN,KAAKC,KAAOK,EAGdC,WACE,OAAOP,KAAKC,KAAKM,WAGnBC,gBAAgBF,GACdN,KAAKI,aAAeE,EAGtBG,aACE,IAAIT,KAAKI,aAAaM,UAEtB,OADAV,KAAKC,KAAKU,QAAQX,KAAKI,aAAaG,YAC7BP,KAAKS,aAGdG,aACE,GAAIZ,KAAKC,KAAKS,UACZ,OAAOV,KAAKS,aAEdT,KAAKI,aAAaO,QAAQX,KAAKO,YAGjCM,WAAWC,GACTd,KAAKE,SAASa,KAAKD,GAGrBE,iBACE,OAAOhB,KAAKI,aAAaa,cAG3BC,cAAcC,GACZnB,KAAKG,YAAYY,KAAKI,GAGxBC,sBAAsBC,EAAIC,GAExB,OADAA,EAAMA,EAAIC,MAAM,MACRC,SAAS,YACRxB,KAAKyB,+BAA+BJ,GAEzCC,EAAIE,SAAS,WACRxB,KAAK0B,+BAA+BL,EAAIC,EAAI,GAAIA,EAAI,SAD7D,EAKFK,mBAAmBN,EAAIC,GAGrB,OAFAA,EAAMA,EAAIC,MAAM,KAChBK,QAAQC,IAAIP,GACRA,EAAIE,SAAS,YACRxB,KAAK8B,4BAA4BT,GAEtCC,EAAIE,SAAS,cACRxB,KAAK+B,iCAAiCV,EAAIC,EAAI,KAEvDM,QAAQC,IAAI7B,KAAKE,SAASoB,EAAI,IAAK,MAC5BtB,KAAKgC,4BAA4BX,EAAIC,EAAI,IAAKA,EAAI,KAG3DQ,4BAA4BT,GAC1B,MAAMf,EAAON,KAAKE,SAASmB,GACrBY,EAAUjC,KAAKI,aACf8B,EAAY5B,EAAK6B,qBAAqBF,EAAQG,oBAC9CC,EAAmB/B,EAAK+B,iBAAiBJ,EAAQK,oBAIvD,OAHIJ,GAAaG,GACf/B,EAAKK,QAAQsB,EAAQ1B,YAEhB2B,GAAaG,EAGtBZ,+BAA+BJ,GAC7B,MAAMf,EAAON,KAAKG,YAAYkB,GACxBY,EAAUjC,KAAKI,aACf8B,EAAY5B,EAAKiC,yBAAyBN,EAAQG,oBAClDI,EAAalC,EAAKkC,WAAWP,EAAQQ,mBAE3C,OADIP,GAAaM,GAAYlC,EAAKK,QAAQsB,EAAQ1B,YAC3C2B,GAAaM,EAGtBT,iCAAiCV,EAAIC,GACnC,MAAMhB,EAAON,KAAKE,SAASmB,GACrBY,EAAUjC,KAAKG,YAAYmB,GAC3BY,EAAY5B,EAAK6B,qBAAqBF,EAAQG,oBAC9CC,EAAmB/B,EAAK+B,iBAAiBJ,EAAQK,oBAEvD,OADIJ,GAAaG,GAAkB/B,EAAKK,QAAQsB,EAAQ1B,YACjD2B,GAAaG,EAGtBX,+BAA+BL,EAAIC,EAAKoB,GACtC,GAAIA,EAAY,EAAG,OAAO,EAC1B,MAAMpC,EAAON,KAAKG,YAAYkB,GACxBY,EAAUjC,KAAKE,SAASoB,GACxBY,EAAY5B,EAAKiC,yBAAyBN,EAAQG,oBAClDI,EAAalC,EAAKkC,WAAWP,EAAQQ,mBAE3C,OADIP,GAAaM,GAAYlC,EAAKK,QAAQsB,EAAQ1B,YAC3C2B,GAAaM,EAGtBR,4BAA4BX,EAAIC,EAAKoB,GACnC,MAAMpC,EAAON,KAAKE,SAASmB,GACrBY,EAAUjC,KAAKE,SAASoB,GACxBY,EAAY5B,EAAK6B,qBACrBF,EAAQU,aAAaD,IAEjBL,EAAmB/B,EAAK+B,iBAC5BJ,EAAQW,aAAaF,IAOvB,OALIR,GAAaG,IACfT,QAAQC,IAAIa,GAEZpC,EAAKuC,SAASZ,EAAQa,UAAUJ,KAE3BR,GAAaG,EAGtBU,YAAYzC,GACV,OAAOA,EAAKyC,gBCxBDC,MArGf,MACEjD,cACEC,KAAKiD,MAAQ,GAGftC,QAAQuC,GACNlD,KAAKiD,MAAMlC,KAAKmC,GAGlBL,SAASI,GACPA,EAAME,QAAQD,GAAQlD,KAAKW,QAAQuC,IAGrCjC,cACE,OAAOjB,KAAKiD,MAAMjD,KAAKiD,MAAMG,OAAS,GAGxCC,QAAQhC,GACN,OAAOrB,KAAKiD,MAAMjD,KAAKiD,MAAMG,QAAU/B,GAGzCsB,aAAatB,GACX,OAAIrB,KAAKqD,QAAQhC,GACRrB,KAAKqD,QAAQhC,GAAI1B,MAEnB,EAGTiD,aAAavB,GACX,OAAOrB,KAAKqD,QAAQhC,GAAIzB,MAG1BwC,mBACE,OAAIpC,KAAKiB,eACCjB,KAAKiB,cAActB,MAEtB,EAGT2C,mBACE,OAAOtC,KAAKiB,cAAcrB,MAG5B6C,kBACE,OAAOzC,KAAKiB,cAAcvB,KAG5Ba,WACE,OAAOP,KAAKiD,MAAMK,MAGpBR,UAAUJ,GACRd,QAAQC,IAAIa,GACZ,IAAIa,EAAS,IAAIC,MAAMd,GAAWe,KAAK,GAKvC,OAJAF,EAASA,EAAOG,IAAIC,GAAK3D,KAAKO,YAC9BqB,QAAQC,IAAI0B,GACZA,EAAOK,UACPhC,QAAQC,IAAI0B,GACLA,EAGTR,cACE,OAAO/C,KAAKiD,MAAMG,OAAS,EAG7BS,gBACE7D,KAAKiB,cAAc6C,YAGrBC,iBACE/D,KAAKiB,cAAc+C,aAGrB7B,qBAAqBxC,GACnB,OAAgC,IAA5BK,KAAKoC,mBAA2C,KAAVzC,GAClCK,KAAKoC,sBAAwBzC,EAAQ,EAG/C4C,wBAAwB5C,GACtB,OAAOK,KAAKoC,sBAAwBzC,EAAQ,EAG9C0C,iBAAiBzC,GACf,OAAII,KAAKiB,eAAsBjB,KAAKsC,qBAAuB1C,EAI7D4C,WAAW9C,GACT,OAAIM,KAAKiB,eAAsBjB,KAAKyC,oBAAsB/C,EAI5DgB,UACE,OAA6B,IAAtBV,KAAKiD,MAAMG,OAGpBa,cACE,OAAOjE,KAAKiD,QCrEDiB,MA5Bf,MACEnE,aAAY,KAAEL,EAAF,MAAQE,EAAR,MAAeD,EAAf,QAAsBE,IAChCG,KAAKN,KAAOA,EACZM,KAAKJ,MAAQA,EACbI,KAAKL,MAAQA,EACbK,KAAKH,QAAUA,EACfG,KAAKmE,eAAgB,EACrBnE,KAAKoE,cAAgBvE,EACrBG,KAAKqE,YAAczE,EAErB0E,aACE,OAAOtE,KAAKH,QAEdiE,YACE9D,KAAKmE,eAAgB,EACrBnE,KAAKH,QAAU,eACfG,KAAKJ,MAAQ,QAEfoE,aACEhE,KAAKmE,eAAgB,EACrBnE,KAAKH,QAAUG,KAAKoE,cACpBpE,KAAKJ,MAAQI,KAAKqE,YAEpBE,YACE,OAAOvE,KAAKmE,gBCjBhB,MAAMK,EAAc,IAAIN,EJqTR,CAAErE,QAAS,iBIpTrB4E,EAAY,IAAIP,EJmTJ,CAAErE,QAAS,iBIjT7B,MAAM6E,UAAYC,IAAMC,UACtB7E,YAAY8E,GACVC,MAAMD,GACN7E,KAAKM,KAAO,IAAI0C,EAChBhD,KAAK+E,MAAQ,CAAEC,KAAMhF,KAAKiF,aAG5BA,YACE,MAAMD,EAAO,IAAIlF,EAKjB,OAJAkF,EAAK3E,gBAAgBL,KAAKkF,kBAC1BlF,KAAKmF,eAAeH,GACpBhF,KAAKoF,YAAYJ,GACjBA,EAAKxE,gBAAgB,IAAIwC,GAClBgC,EAGTE,iBACE,MAAM5E,EAAO,IAAI0C,EAKjB,OAJsBqC,IAAOC,QAAQ7F,GACvB0D,QAAQD,IACpB5C,EAAKK,QAAQ,IAAIuD,EAAKhB,MAEjB5C,EAGT8E,YAAYJ,GACV,IAAK,IAAIO,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,IAAIzE,EAAU,IAAIkC,EAClB,IAAK,IAAIwC,EAAI,EAAGA,GAAKD,EAAOC,IAC1B1E,EAAQH,QAAQqE,EAAKzE,YACrBO,EAAQ+C,gBAEV/C,EAAQiD,iBACRiB,EAAKnE,WAAWC,IAIpBqE,eAAeH,GACb,IAAK,IAAIO,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BP,EAAK9D,cAAc,IAAI8B,GAI3ByC,aACEzF,KAAK0F,SAASX,IAAU,MACdC,EAASD,EAATC,KAER,OADAA,EAAKpE,aACE,CAAEoE,UAIbW,UAAUC,GACRA,EAAMC,iBAGRC,KAAKF,GACHA,EAAMG,aAAaC,QAAQ,KAAMJ,EAAMK,OAAO5E,IAGhD6E,iBAAiBC,EAAaP,GAC5BA,EAAMC,iBACN,MAAMO,EAAMR,EAAMG,aAAaM,QAAQ,MACvCrG,KAAK0F,SAASX,IAAU,MACdC,EAASD,EAATC,KAER,OADAA,EAAK5D,sBAAsB+E,EAAaC,GACjC,CAAEpB,UAIbsB,oBAAoBhG,EAAMiF,GACxB,MAAMgB,EAAajG,EAAK2C,MAAMG,OAC9B,OAAmB,IAAfmD,EACK,yBAAKC,UAAU,eAAe/B,EAAUH,cAC1ChE,EAAK2C,MAAMS,IAAI,CAACR,EAAMsC,KACvBA,EAAI,IAAMe,GACZrD,EAAKc,aAEHd,EAAKqB,YAEL,yBACEiC,UAAU,cACVC,MAAOzG,KAAK0G,SAASxD,GACrByD,UAAU,SAETzD,EAAKoB,cAIV,yBACEkC,UAAU,cACVnF,GAAI,WAAakE,EAAQ,KAAOgB,EAAaf,GAC7CmB,UAAU,OACVC,YAAa5G,KAAK8F,KAClBW,MAAOzG,KAAK0G,SAASxD,IAEpBA,EAAKoB,gBAMduC,qBAEE,OADc7G,KAAK+E,MAAMC,KAAK9E,SACjBwD,IAAI,CAAC5C,EAASyE,IAEvB,yBACEiB,UAAU,OACVnF,GAAI,WAAakE,EACjBuB,OAAQ9G,KAAK+G,cAAcC,KAAKhH,KAAMuF,GACtC0B,WAAYjH,KAAK2F,WAEhB3F,KAAKsG,oBAAoBxF,EAASyE,KAM3C2B,wBAEE,OADclH,KAAK+E,MAAMC,KAAK7E,YACjBuD,IAAI,CAACvC,EAAYoE,KAC5B,IAAIrC,EAAO/B,EAAWF,cAEtB,OADKiC,IAAMA,EAAOuB,GAEhB,yBACEpD,GAAI,cAAgBkE,EACpBiB,UAAU,iBACVG,UAAU,OACVC,YAAa5G,KAAK8F,KAClBgB,OAAQ9G,KAAKkG,iBAAiBc,KAAKhH,KAAMuF,GACzC0B,WAAYjH,KAAK2F,UACjBc,MAAOzG,KAAK0G,SAASxD,IAEpBA,EAAKoB,gBAMdoC,SAASxD,GACP,MAAO,CAAEtD,MAAOsD,EAAKtD,OAGvBuH,cACE,IAAIjE,EAAOlD,KAAK+E,MAAMC,KAAKhE,iBAE3B,OADKkC,IAAMA,EAAOuB,GAEhB,yBACEpD,GAAG,WACHmF,UAAU,OACVC,MAAOzG,KAAK0G,SAASxD,GACrByD,UAAW3G,KAAK+E,MAAMC,KAAK5E,aAAa2C,cACxC6D,YAAa5G,KAAK8F,MAEjB5C,EAAKoB,cAKZyC,cAAcZ,EAAaP,GACzBA,EAAMC,iBACN,MAAMO,EAAMR,EAAMG,aAAaM,QAAQ,MACvCzE,QAAQC,IAAIuE,GACZpG,KAAK0F,SAASX,IAAU,MACdC,EAASD,EAATC,KAER,OADAA,EAAKrD,mBAAmBwE,EAAaC,GAC9B,CAAEpB,UAIboC,WACE,OACE,6BACE,6BACE,yBAAKZ,UAAU,SACb,yBACEa,QAASrH,KAAKyF,WAAWuB,KAAKhH,MAC9BwG,UAAU,kBAEThC,EAAYF,cAEf,yBACEjD,GAAG,YACHuF,YAAa5G,KAAK8F,KAClBmB,WAAYjH,KAAK2F,UACjBgB,UAAU,OACVH,UAAU,kBAETxG,KAAKmH,eAER,yBAAKX,UAAU,iBAAiBxG,KAAKkH,2BAGzC,yBAAKV,UAAU,QAAQxG,KAAK6G,uBAKlCS,SACE,OAAO,yBAAKd,UAAU,QAAQxG,KAAKoH,aAGxB1C,Q,MC9Mf6C,IAASD,OAAO,6BAAK,kBAAC,EAAD,OAAeE,SAASC,eAAe,U","file":"static/js/main.53613350.chunk.js","sourcesContent":["const Cards = [\n  {\n    suit: \"spade\",\n    value: 1,\n    color: \"black\",\n    unicode: \"\\u{1F0A1}\"\n  },\n  {\n    suit: \"spade\",\n    value: 2,\n    color: \"black\",\n    unicode: \"\\u{1F0A2}\"\n  },\n  {\n    suit: \"spade\",\n    value: 3,\n    color: \"black\",\n    unicode: \"\\u{1F0A3}\"\n  },\n  {\n    suit: \"spade\",\n    value: 4,\n    color: \"black\",\n    unicode: \"\\u{1F0A4}\"\n  },\n  {\n    suit: \"spade\",\n    value: 5,\n    color: \"black\",\n    unicode: \"\\u{1F0A5}\"\n  },\n  {\n    suit: \"spade\",\n    value: 6,\n    color: \"black\",\n    unicode: \"\\u{1F0A6}\"\n  },\n  {\n    suit: \"spade\",\n    value: 7,\n    color: \"black\",\n    unicode: \"\\u{1F0A7}\"\n  },\n  {\n    suit: \"spade\",\n    value: 8,\n    color: \"black\",\n    unicode: \"\\u{1F0A8}\"\n  },\n  {\n    suit: \"spade\",\n    value: 9,\n    color: \"black\",\n    unicode: \"\\u{1F0A9}\"\n  },\n  {\n    suit: \"spade\",\n    value: 10,\n    color: \"black\",\n    unicode: \"\\u{1F0AA}\"\n  },\n  {\n    suit: \"spade\",\n    value: 11,\n    color: \"black\",\n    unicode: \"\\u{1F0AB}\"\n  },\n  {\n    suit: \"spade\",\n    value: 12,\n    color: \"black\",\n    unicode: \"\\u{1F0AD}\"\n  },\n  {\n    suit: \"spade\",\n    value: 13,\n    color: \"black\",\n    unicode: \"\\u{1F0AE}\"\n  },\n  {\n    suit: \"club\",\n    value: 1,\n    color: \"black\",\n    unicode: \"\\u{1F0D1}\"\n  },\n  {\n    suit: \"club\",\n    value: 2,\n    color: \"black\",\n    unicode: \"\\u{1F0D2}\"\n  },\n  {\n    suit: \"club\",\n    value: 3,\n    color: \"black\",\n    unicode: \"\\u{1F0D3}\"\n  },\n  {\n    suit: \"club\",\n    value: 4,\n    color: \"black\",\n    unicode: \"\\u{1F0D4}\"\n  },\n  {\n    suit: \"club\",\n    value: 5,\n    color: \"black\",\n    unicode: \"\\u{1F0D5}\"\n  },\n  {\n    suit: \"club\",\n    value: 6,\n    color: \"black\",\n    unicode: \"\\u{1F0D6}\"\n  },\n  {\n    suit: \"club\",\n    value: 7,\n    color: \"black\",\n    unicode: \"\\u{1F0D7}\"\n  },\n  {\n    suit: \"club\",\n    value: 8,\n    color: \"black\",\n    unicode: \"\\u{1F0D8}\"\n  },\n  {\n    suit: \"club\",\n    value: 9,\n    color: \"black\",\n    unicode: \"\\u{1F0D9}\"\n  },\n  {\n    suit: \"club\",\n    value: 10,\n    color: \"black\",\n    unicode: \"\\u{1F0DA}\"\n  },\n  {\n    suit: \"club\",\n    value: 11,\n    color: \"black\",\n    unicode: \"\\u{1F0DB}\"\n  },\n  {\n    suit: \"club\",\n    value: 12,\n    color: \"black\",\n    unicode: \"\\u{1F0DD}\"\n  },\n  {\n    suit: \"club\",\n    value: 13,\n    color: \"black\",\n    unicode: \"\\u{1F0DE}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 1,\n    color: \"red\",\n    unicode: \"\\u{1F0C1}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 2,\n    color: \"red\",\n    unicode: \"\\u{1F0C2}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 3,\n    color: \"red\",\n    unicode: \"\\u{1F0C3}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 4,\n    color: \"red\",\n    unicode: \"\\u{1F0C4}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 5,\n    color: \"red\",\n    unicode: \"\\u{1F0C5}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 6,\n    color: \"red\",\n    unicode: \"\\u{1F0C6}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 7,\n    color: \"red\",\n    unicode: \"\\u{1F0C7}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 8,\n    color: \"red\",\n    unicode: \"\\u{1F0C8}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 9,\n    color: \"red\",\n    unicode: \"\\u{1F0C9}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 10,\n    color: \"red\",\n    unicode: \"\\u{1F0CA}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 11,\n    color: \"red\",\n    unicode: \"\\u{1F0CB}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 12,\n    color: \"red\",\n    unicode: \"\\u{1F0CD}\"\n  },\n  {\n    suit: \"diamond\",\n    value: 13,\n    color: \"red\",\n    unicode: \"\\u{1F0CE}\"\n  },\n  {\n    suit: \"heart\",\n    value: 1,\n    color: \"red\",\n    unicode: \"\\u{1F0B1}\"\n  },\n  {\n    suit: \"heart\",\n    value: 2,\n    color: \"red\",\n    unicode: \"\\u{1F0B2}\"\n  },\n  {\n    suit: \"heart\",\n    value: 3,\n    color: \"red\",\n    unicode: \"\\u{1F0B3}\"\n  },\n  {\n    suit: \"heart\",\n    value: 4,\n    color: \"red\",\n    unicode: \"\\u{1F0B4}\"\n  },\n  {\n    suit: \"heart\",\n    value: 5,\n    color: \"red\",\n    unicode: \"\\u{1F0B5}\"\n  },\n  {\n    suit: \"heart\",\n    value: 6,\n    color: \"red\",\n    unicode: \"\\u{1F0B6}\"\n  },\n  {\n    suit: \"heart\",\n    value: 7,\n    color: \"red\",\n    unicode: \"\\u{1F0B7}\"\n  },\n  {\n    suit: \"heart\",\n    value: 8,\n    color: \"red\",\n    unicode: \"\\u{1F0B8}\"\n  },\n  {\n    suit: \"heart\",\n    value: 9,\n    color: \"red\",\n    unicode: \"\\u{1F0B9}\"\n  },\n  {\n    suit: \"heart\",\n    value: 10,\n    color: \"red\",\n    unicode: \"\\u{1F0BA}\"\n  },\n  {\n    suit: \"heart\",\n    value: 11,\n    color: \"red\",\n    unicode: \"\\u{1F0BB}\"\n  },\n  {\n    suit: \"heart\",\n    value: 12,\n    color: \"red\",\n    unicode: \"\\u{1F0BD}\"\n  },\n  {\n    suit: \"heart\",\n    value: 13,\n    color: \"red\",\n    unicode: \"\\u{1F0BE}\"\n  }\n];\n\nconst EmptyCard = { unicode: \"\\u{1F0DF}\" };\nconst Default = { unicode: \"\\u{1F0A0}\" };\n\nexport { Cards, EmptyCard, Default };\n","class Game {\n  constructor() {\n    this.deck = null;\n    this.tableaus = [];\n    this.foundations = [];\n    this.showCardPile = null;\n  }\n\n  addShuffledPile(pile) {\n    this.deck = pile;\n  }\n\n  drawCard() {\n    return this.deck.drawCard();\n  }\n\n  setShowCardPile(pile) {\n    this.showCardPile = pile;\n  }\n\n  reloadDeck() {\n    if (this.showCardPile.isEmpty()) return;\n    this.deck.addCard(this.showCardPile.drawCard());\n    return this.reloadDeck();\n  }\n\n  changeCard() {\n    if (this.deck.isEmpty()) {\n      return this.reloadDeck();\n    }\n    this.showCardPile.addCard(this.drawCard());\n  }\n\n  addTableau(tableau) {\n    this.tableaus.push(tableau);\n  }\n\n  getTopMostCard() {\n    return this.showCardPile.getLastCard();\n  }\n\n  addFoundation(foundation) {\n    this.foundations.push(foundation);\n  }\n\n  addCardToReservedPile(id, des) {\n    des = des.split(\"_\");\n    if (des.includes(\"showCard\")) {\n      return this.addCardToReservedPileFromWaste(id);\n    }\n    if (des.includes(\"tableau\")) {\n      return this.addCardToFoundationFromTableau(id, des[1], des[2]);\n    }\n  }\n\n  addCardToStackPile(id, des) {\n    des = des.split(\"_\");\n    console.log(des);\n    if (des.includes(\"showCard\")) {\n      return this.addCardToStackPileFromWaste(id);\n    }\n    if (des.includes(\"foundation\")) {\n      return this.addCardToStackPileFromFoundation(id, des[1]);\n    }\n    console.log(this.tableaus[des[1]], \"61\");\n    return this.addCardToTableauFromTableau(id, des[1], +des[2]);\n  }\n\n  addCardToStackPileFromWaste(id) {\n    const pile = this.tableaus[id];\n    const srcPile = this.showCardPile;\n    const isAddable = pile.isAddableToStackPile(srcPile.getLastCardValue());\n    const isAlternateColor = pile.isAlternateColor(srcPile.getLastCardColor());\n    if (isAddable && isAlternateColor) {\n      pile.addCard(srcPile.drawCard());\n    }\n    return isAddable && isAlternateColor;\n  }\n\n  addCardToReservedPileFromWaste(id) {\n    const pile = this.foundations[id];\n    const srcPile = this.showCardPile;\n    const isAddable = pile.isAddableToReservedPile(+srcPile.getLastCardValue());\n    const isSameSuit = pile.isSameSuit(srcPile.getLastCardSuit());\n    if (isAddable && isSameSuit) pile.addCard(srcPile.drawCard());\n    return isAddable && isSameSuit;\n  }\n\n  addCardToStackPileFromFoundation(id, des) {\n    const pile = this.tableaus[id];\n    const srcPile = this.foundations[des];\n    const isAddable = pile.isAddableToStackPile(srcPile.getLastCardValue());\n    const isAlternateColor = pile.isAlternateColor(srcPile.getLastCardColor());\n    if (isAddable && isAlternateColor) pile.addCard(srcPile.drawCard());\n    return isAddable && isAlternateColor;\n  }\n\n  addCardToFoundationFromTableau(id, des, noOfCards) {\n    if (noOfCards > 1) return false;\n    const pile = this.foundations[id];\n    const srcPile = this.tableaus[des];\n    const isAddable = pile.isAddableToReservedPile(+srcPile.getLastCardValue());\n    const isSameSuit = pile.isSameSuit(srcPile.getLastCardSuit());\n    if (isAddable && isSameSuit) pile.addCard(srcPile.drawCard());\n    return isAddable && isSameSuit;\n  }\n\n  addCardToTableauFromTableau(id, des, noOfCards) {\n    const pile = this.tableaus[id];\n    const srcPile = this.tableaus[des];\n    const isAddable = pile.isAddableToStackPile(\n      srcPile.getCardValue(noOfCards)\n    );\n    const isAlternateColor = pile.isAlternateColor(\n      srcPile.getCardColor(noOfCards)\n    );\n    if (isAddable && isAlternateColor) {\n      console.log(noOfCards);\n\n      pile.addCards(srcPile.drawCards(noOfCards));\n    }\n    return isAddable && isAlternateColor;\n  }\n\n  isDraggable(pile) {\n    return pile.isDraggable();\n  }\n}\n\nexport default Game;\n","class Pile {\n  constructor() {\n    this.cards = [];\n  }\n\n  addCard(card) {\n    this.cards.push(card);\n  }\n\n  addCards(cards) {\n    cards.forEach(card => this.addCard(card));\n  }\n\n  getLastCard() {\n    return this.cards[this.cards.length - 1];\n  }\n\n  getCard(id) {\n    return this.cards[this.cards.length - +id];\n  }\n\n  getCardValue(id) {\n    if (this.getCard(id)) {\n      return this.getCard(id).value;\n    }\n    return 0;\n  }\n\n  getCardColor(id) {\n    return this.getCard(id).color;\n  }\n\n  getLastCardValue() {\n    if (this.getLastCard()) {\n      return +this.getLastCard().value;\n    }\n    return 0;\n  }\n\n  getLastCardColor() {\n    return this.getLastCard().color;\n  }\n\n  getLastCardSuit() {\n    return this.getLastCard().suit;\n  }\n\n  drawCard() {\n    return this.cards.pop();\n  }\n\n  drawCards(noOfCards) {\n    console.log(noOfCards)\n    let result = new Array(noOfCards).fill(1);\n    result = result.map(x => this.drawCard());\n    console.log(result);\n    result.reverse();\n    console.log(result)\n    return result;\n  }\n\n  isDraggable() {\n    return this.cards.length > 0;\n  }\n\n  blockLastCard() {\n    this.getLastCard().blockCard();\n  }\n\n  revealLastCard() {\n    this.getLastCard().revealCard();\n  }\n\n  isAddableToStackPile(value) {\n    if (this.getLastCardValue() === 0) return value === 13;\n    return +this.getLastCardValue() === +value + 1;\n  }\n\n  isAddableToReservedPile(value) {\n    return this.getLastCardValue() === +value - 1;\n  }\n\n  isAlternateColor(color) {\n    if (this.getLastCard()) return this.getLastCardColor() !== color;\n    return true;\n  }\n\n  isSameSuit(suit) {\n    if (this.getLastCard()) return this.getLastCardSuit() === suit;\n    return true;\n  }\n\n  isEmpty() {\n    return this.cards.length === 0;\n  }\n\n  getAllCards() {\n    return this.cards;\n  }\n}\n\nexport default Pile;\n","class Card {\n  constructor({ suit, color, value, unicode }) {\n    this.suit = suit;\n    this.color = color;\n    this.value = value;\n    this.unicode = unicode;\n    this.isBlockedCard = false;\n    this.actualUnicode = unicode;\n    this.actualColor = color;\n  }\n  getUnicode() {\n    return this.unicode;\n  }\n  blockCard() {\n    this.isBlockedCard = true;\n    this.unicode = \"\\u{1F0A0}\";\n    this.color = \"black\";\n  }\n  revealCard() {\n    this.isBlockedCard = false;\n    this.unicode = this.actualUnicode;\n    this.color = this.actualColor;\n  }\n  isBlocked() {\n    return this.isBlockedCard;\n  }\n}\n\nexport default Card;\n","import React from \"react\";\nimport { Cards, EmptyCard, Default } from \"./cards_data/cards\";\nimport lodash from \"lodash\";\nimport Game from \"./Game\";\nimport Pile from \"./pile\";\nimport Card from \"./Card\";\n\nconst defaultCard = new Card(Default);\nconst emptyCard = new Card(EmptyCard);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pile = new Pile();\n    this.state = { game: this.startGame() };\n  }\n\n  startGame() {\n    const game = new Game();\n    game.addShuffledPile(this.initializePile());\n    this.setFoundations(game);\n    this.setTableaus(game);\n    game.setShowCardPile(new Pile());\n    return game;\n  }\n\n  initializePile() {\n    const pile = new Pile();\n    const shuffledCards = lodash.shuffle(Cards);\n    shuffledCards.forEach(card => {\n      pile.addCard(new Card(card));\n    });\n    return pile;\n  }\n\n  setTableaus(game) {\n    for (let index = 0; index < 7; index++) {\n      let tableau = new Pile();\n      for (let i = 0; i <= index; i++) {\n        tableau.addCard(game.drawCard());\n        tableau.blockLastCard();\n      }\n      tableau.revealLastCard();\n      game.addTableau(tableau);\n    }\n  }\n\n  setFoundations(game) {\n    for (let index = 0; index < 4; index++) {\n      game.addFoundation(new Pile());\n    }\n  }\n\n  updateDeck() {\n    this.setState(state => {\n      const { game } = state;\n      game.changeCard();\n      return { game };\n    });\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"id\", event.target.id);\n  }\n\n  dropInFoundation(destination, event) {\n    event.preventDefault();\n    const src = event.dataTransfer.getData(\"id\");\n    this.setState(state => {\n      const { game } = state;\n      game.addCardToReservedPile(destination, src);\n      return { game };\n    });\n  }\n\n  showAllTableauCards(pile, index) {\n    const totalCards = pile.cards.length;\n    if (totalCards === 0)\n      return <div className=\"tableauCard\">{emptyCard.getUnicode()}</div>;\n    return pile.cards.map((card, i) => {\n      if (i + 1 === totalCards) {\n        card.revealCard();\n      }\n      if (card.isBlocked())\n        return (\n          <div\n            className=\"tableauCard\"\n            style={this.getColor(card)}\n            draggable=\"false\"\n          >\n            {card.getUnicode()}\n          </div>\n        );\n      return (\n        <div\n          className=\"tableauCard\"\n          id={\"tableau_\" + index + \"_\" + (totalCards - i)}\n          draggable=\"true\"\n          onDragStart={this.drag}\n          style={this.getColor(card)}\n        >\n          {card.getUnicode()}\n        </div>\n      );\n    });\n  }\n\n  getAllTableauCards() {\n    const piles = this.state.game.tableaus;\n    return piles.map((tableau, index) => {\n      return (\n        <div\n          className=\"card\"\n          id={\"tableau_\" + index}\n          onDrop={this.dropInTableau.bind(this, index)}\n          onDragOver={this.allowDrop}\n        >\n          {this.showAllTableauCards(tableau, index)}\n        </div>\n      );\n    });\n  }\n\n  getAllFoundationCards() {\n    const piles = this.state.game.foundations;\n    return piles.map((foundation, index) => {\n      let card = foundation.getLastCard();\n      if (!card) card = emptyCard;\n      return (\n        <div\n          id={\"foundation_\" + index}\n          className=\"foundationCard\"\n          draggable=\"true\"\n          onDragStart={this.drag}\n          onDrop={this.dropInFoundation.bind(this, index)}\n          onDragOver={this.allowDrop}\n          style={this.getColor(card)}\n        >\n          {card.getUnicode()}\n        </div>\n      );\n    });\n  }\n\n  getColor(card) {\n    return { color: card.color };\n  }\n\n  showTopCard() {\n    let card = this.state.game.getTopMostCard();\n    if (!card) card = emptyCard;\n    return (\n      <div\n        id=\"showCard\"\n        className=\"card\"\n        style={this.getColor(card)}\n        draggable={this.state.game.showCardPile.isDraggable()}\n        onDragStart={this.drag}\n      >\n        {card.getUnicode()}\n      </div>\n    );\n  }\n\n  dropInTableau(destination, event) {\n    event.preventDefault();\n    const src = event.dataTransfer.getData(\"id\");\n    console.log(src);\n    this.setState(state => {\n      const { game } = state;\n      game.addCardToStackPile(destination, src);\n      return { game };\n    });\n  }\n\n  allCards() {\n    return (\n      <div>\n        <div>\n          <div className=\"stock\">\n            <div\n              onClick={this.updateDeck.bind(this)}\n              className=\"foundationCard\"\n            >\n              {defaultCard.getUnicode()}\n            </div>\n            <div\n              id=\"wasteCard\"\n              onDragStart={this.drag}\n              onDragOver={this.allowDrop}\n              draggable=\"true\"\n              className=\"foundationCard\"\n            >\n              {this.showTopCard()}\n            </div>\n            <div className=\"foundtionDeck\">{this.getAllFoundationCards()}</div>\n          </div>\n        </div>\n        <div className=\"deck\">{this.getAllTableauCards()}</div>\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"main\">{this.allCards()}</div>;\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<div><App /></div>, document.getElementById('root'));\n\n"],"sourceRoot":""}